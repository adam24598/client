{"ast":null,"code":"import axios from 'axios';\nimport { returnErrors } from './errorAction';\nimport { USER_LOADED, USER_LOADING, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT_SUCCESS } from '../actions/types';\nexport const loadUser = () => (dispatch, getState) => {\n  dispatch({\n    type: USER_LOADING\n  });\n  const token = getState().auth.token;\n  const config = {\n    headers: {\n      'Content-type': 'application/json'\n    }\n  };\n\n  if (token) {\n    config.headers['x-auth-token'] = token;\n  }\n\n  axios.get('/api/auth/user', config).then(res => dispatch({\n    type: USER_LOADED,\n    payload: res.data\n  })).catch(err => {\n    dispatch(returnErrors(err.response.data, err.response.status));\n    dispatch({\n      type: AUTH_ERROR\n    });\n  });\n};","map":{"version":3,"sources":["C:/Users/pc1/Desktop/gomycode/projet/client/src/actions/authAction.js"],"names":["axios","returnErrors","USER_LOADED","USER_LOADING","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT_SUCCESS","loadUser","dispatch","getState","type","token","auth","config","headers","get","then","res","payload","data","catch","err","response","status"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,YAAR,QAA2B,eAA3B;AACA,SACIC,WADJ,EAEIC,YAFJ,EAGIC,UAHJ,EAIIC,aAJJ,EAKIC,UALJ,EAMIC,cANJ,QAQO,kBARP;AAYA,OAAO,MAAMC,QAAQ,GAAG,MAAM,CAACC,QAAD,EAAYC,QAAZ,KAAyB;AACnDD,EAAAA,QAAQ,CAAC;AAAEE,IAAAA,IAAI,EAAER;AAAR,GAAD,CAAR;AAIA,QAAMS,KAAK,GAAGF,QAAQ,GAAGG,IAAX,CAAgBD,KAA9B;AAEA,QAAME,MAAM,GAAG;AACXC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AADE,GAAf;;AAKE,MAAIH,KAAJ,EAAW;AACTE,IAAAA,MAAM,CAACC,OAAP,CAAe,cAAf,IAAiCH,KAAjC;AACD;;AAEDZ,EAAAA,KAAK,CACNgB,GADC,CACG,gBADH,EACqBF,MADrB,EAEDG,IAFC,CAEIC,GAAG,IACPT,QAAQ,CAAC;AACPE,IAAAA,IAAI,EAAET,WADC;AAEPiB,IAAAA,OAAO,EAAED,GAAG,CAACE;AAFN,GAAD,CAHR,EAQDC,KARC,CAQKC,GAAG,IAAI;AACZb,IAAAA,QAAQ,CAACR,YAAY,CAACqB,GAAG,CAACC,QAAJ,CAAaH,IAAd,EAAoBE,GAAG,CAACC,QAAJ,CAAaC,MAAjC,CAAb,CAAR;AACAf,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAEP;AADC,KAAD,CAAR;AAGD,GAbC;AAcD,CA9BE","sourcesContent":["import axios from 'axios';\r\nimport {returnErrors} from './errorAction';\r\nimport {\r\n    USER_LOADED,\r\n    USER_LOADING,\r\n    AUTH_ERROR,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT_SUCCESS,\r\n\r\n} from '../actions/types';\r\n\r\n\r\n\r\nexport const loadUser = () => (dispatch , getState) => {\r\n    dispatch({ type: USER_LOADING });\r\n\r\n\r\n\r\n    const token = getState().auth.token;\r\n\r\n    const config = {\r\n        headers: {\r\n          'Content-type': 'application/json'\r\n        }\r\n      };\r\n      if (token) {\r\n        config.headers['x-auth-token'] = token;\r\n      }\r\n    \r\n      axios\r\n    .get('/api/auth/user', config)\r\n    .then(res =>\r\n      dispatch({\r\n        type: USER_LOADED,\r\n        payload: res.data\r\n      })\r\n    )\r\n    .catch(err => {\r\n      dispatch(returnErrors(err.response.data, err.response.status));\r\n      dispatch({\r\n        type: AUTH_ERROR\r\n      });\r\n    });\r\n    };\r\n"]},"metadata":{},"sourceType":"module"}