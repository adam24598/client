{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pc1\\\\Desktop\\\\gomycode\\\\projet\\\\client\\\\src\\\\component\\\\auth\\\\LoginModel.js\";\nimport React, { Component } from 'react';\nimport { Button, Modal, ModalHeader, Form, FormGroup, Label, Input, NavLink, ModalBody, Alert } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { login } from '../../actions/authAction';\nimport { clearErrors } from '../../actions/errorAction';\n\nclass LoginModal extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      modal: false,\n      name: '',\n      mdp: '',\n      msg: null\n    };\n\n    this.toggle = () => {\n      this.props.clearErrors();\n      this.setState({\n        modal: !this.state.modal\n      });\n    };\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      const {\n        name,\n        mdp\n      } = this.state;\n      const user = {\n        name,\n        mdp\n      };\n      this.props.login(user);\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      error,\n      isAuthenticated\n    } = this.props;\n\n    if (error !== prevProps.error) {\n      if (error.id === 'LOGIN_FAIL') {\n        this.setState({\n          msg: error.msg.msg\n        });\n      } else {\n        this.setState({\n          msg: null\n        });\n      }\n    }\n\n    if (this.state.modal) {\n      if (isAuthenticated) {\n        this.toggle();\n      }\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      onClick: this.toggle,\n      href: \"#\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }\n    }, \"Login\"), /*#__PURE__*/React.createElement(Modal, {\n      isOpen: this.state.modal,\n      toggle: this.toggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(ModalHeader, {\n      toggle: this.toggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }\n    }, \"login\"), /*#__PURE__*/React.createElement(ModalBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }\n    }, this.state.msg ? /*#__PURE__*/React.createElement(Alert, {\n      color: \"danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }\n    }, this.state.msg) : null, /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"user\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }\n    }, \"User\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"name\",\n      id: \"user\",\n      placeholder: \"enter name\",\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Label, {\n      for: \"user\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 21\n      }\n    }, \"mdp\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"mdp\",\n      id: \"user\",\n      placeholder: \"enter password\",\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      color: \"dark\",\n      style: {\n        marginTop: '2rem'\n      },\n      block: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }\n    }, \"Login\"))))));\n  }\n\n}\n\nLoginModal.propTypes = {\n  isAuthenticated: LoginModal.PropTypes.Bool,\n  error: PropTypes.object.isRequired,\n  login: PropTypes.func.isRequired,\n  clearErrors: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  error: state.error\n});\n\nexport default connect(mapStateToProps, {\n  login,\n  clearErrors\n})(LoginModal);","map":{"version":3,"sources":["C:/Users/pc1/Desktop/gomycode/projet/client/src/component/auth/LoginModel.js"],"names":["React","Component","Button","Modal","ModalHeader","Form","FormGroup","Label","Input","NavLink","ModalBody","Alert","connect","PropTypes","login","clearErrors","LoginModal","state","modal","name","mdp","msg","toggle","props","setState","onChange","e","target","value","onSubmit","preventDefault","user","componentDidUpdate","prevProps","error","isAuthenticated","id","render","marginTop","propTypes","Bool","object","isRequired","func","mapStateToProps","auth"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,SACIC,MADJ,EAEIC,KAFJ,EAGIC,WAHJ,EAIIC,IAJJ,EAKIC,SALJ,EAMIC,KANJ,EAOIC,KAPJ,EAQIC,OARJ,EASIC,SATJ,EAUIC,KAVJ,QAWO,YAXP;AAYC,SAAQC,OAAR,QAAsB,aAAtB;AACD,OAAOC,SAAP,MAAsB,YAAtB;AACC,SAAQC,KAAR,QAAqB,0BAArB;AACA,SAAQC,WAAR,QAA0B,2BAA1B;;AAGA,MAAMC,UAAN,SAAyBf,SAAzB,CAAkC;AAAA;AAAA;AAAA,SACnCgB,KADmC,GAC7B;AACFC,MAAAA,KAAK,EAAC,KADJ;AAEFC,MAAAA,IAAI,EAAC,EAFH;AAGFC,MAAAA,GAAG,EAAC,EAHF;AAIFC,MAAAA,GAAG,EAAE;AAJH,KAD6B;;AAAA,SAqCnCC,MArCmC,GAqC5B,MAAI;AACP,WAAKC,KAAL,CAAWR,WAAX;AACA,WAAKS,QAAL,CAAc;AACVN,QAAAA,KAAK,EAAC,CAAC,KAAKD,KAAL,CAAWC;AADR,OAAd;AAGH,KA1CkC;;AAAA,SA8CnCO,QA9CmC,GA8CzBC,CAAD,IAAK;AACV,WAAKF,QAAL,CAAc;AAAC,SAACE,CAAC,CAACC,MAAF,CAASR,IAAV,GAAgBO,CAAC,CAACC,MAAF,CAASC;AAA1B,OAAd;AACH,KAhDkC;;AAAA,SAmDnCC,QAnDmC,GAmDxBH,CAAC,IAAG;AACXA,MAAAA,CAAC,CAACI,cAAF;AAEA,YAAK;AAACX,QAAAA,IAAD;AAAMC,QAAAA;AAAN,UAAY,KAAKH,KAAtB;AACA,YAAMc,IAAI,GAAE;AACRZ,QAAAA,IADQ;AAERC,QAAAA;AAFQ,OAAZ;AAKA,WAAKG,KAAL,CAAWT,KAAX,CAAiBiB,IAAjB;AAEH,KA9DkC;AAAA;;AAkBnCC,EAAAA,kBAAkB,CAACC,SAAD,EAAW;AACzB,UAAM;AAACC,MAAAA,KAAD;AAAOC,MAAAA;AAAP,QAAwB,KAAKZ,KAAnC;;AACA,QAAGW,KAAK,KAAGD,SAAS,CAACC,KAArB,EAA2B;AACvB,UAAGA,KAAK,CAACE,EAAN,KAAW,YAAd,EAA2B;AACvB,aAAKZ,QAAL,CAAc;AAACH,UAAAA,GAAG,EAACa,KAAK,CAACb,GAAN,CAAUA;AAAf,SAAd;AACH,OAFD,MAEM;AACF,aAAKG,QAAL,CAAc;AAACH,UAAAA,GAAG,EAAC;AAAL,SAAd;AACH;AACJ;;AAGD,QAAI,KAAKJ,KAAL,CAAWC,KAAf,EAAqB;AACjB,UAAGiB,eAAH,EAAmB;AACf,aAAKb,MAAL;AACH;AACJ;AAEJ;;AA+BDe,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,OAAD;AAAS,MAAA,OAAO,EAAE,KAAKf,MAAvB;AAA+B,MAAA,IAAI,EAAC,GAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,eAKR,oBAAC,KAAD;AAAO,MAAA,MAAM,EAAE,KAAKL,KAAL,CAAWC,KAA1B;AAAiC,MAAA,MAAM,EAAE,KAAKI,MAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEQ,oBAAC,WAAD;AAAa,MAAA,MAAM,EAAE,KAAKA,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFR,eAKQ,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKL,KAAL,CAAWI,GAAX,gBACG,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuB,KAAKJ,KAAL,CAAWI,GAAlC,CADH,GAEE,IAHP,eAII,oBAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,KAAKQ,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEA,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACQ,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADR,eAEQ,oBAAC,KAAD;AACA,MAAA,IAAI,EAAC,MADL;AAEA,MAAA,IAAI,EAAC,MAFL;AAGA,MAAA,EAAE,EAAC,MAHH;AAIA,MAAA,WAAW,EAAC,YAJZ;AAKA,MAAA,QAAQ,EAAE,KAAKJ,QALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFR,eAWQ,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAXR,eAYQ,oBAAC,KAAD;AACA,MAAA,IAAI,EAAC,MADL;AAEA,MAAA,IAAI,EAAC,KAFL;AAGA,MAAA,EAAE,EAAC,MAHH;AAIA,MAAA,WAAW,EAAC,gBAJZ;AAKA,MAAA,QAAQ,EAAE,KAAKA,QALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZR,eAoBI,oBAAC,MAAD;AACA,MAAA,KAAK,EAAC,MADN;AAEA,MAAA,KAAK,EAAE;AAACa,QAAAA,SAAS,EAAC;AAAX,OAFP;AAGA,MAAA,KAAK,MAHL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eApBJ,CAFA,CAJJ,CALR,CALQ,CADJ;AAmDH;;AAtHkC;;AAA5BtB,U,CAQAuB,S,GAAU;AACbJ,EAAAA,eAAe,EATZnB,UASa,CAAKH,SAAL,CAAe2B,IADlB;AAEbN,EAAAA,KAAK,EAAGrB,SAAS,CAAC4B,MAAV,CAAiBC,UAFZ;AAGb5B,EAAAA,KAAK,EAACD,SAAS,CAAC8B,IAAV,CAAeD,UAHR;AAIb3B,EAAAA,WAAW,EAACF,SAAS,CAAC8B,IAAV,CAAeD;AAJd,C;;AAgHjB,MAAME,eAAe,GAAG3B,KAAK,KAAI;AAC9BkB,EAAAA,eAAe,EAAClB,KAAK,CAAC4B,IAAN,CAAWV,eADG;AAE9BD,EAAAA,KAAK,EAACjB,KAAK,CAACiB;AAFkB,CAAJ,CAA7B;;AAOA,eAAetB,OAAO,CAACgC,eAAD,EAAiB;AAAC9B,EAAAA,KAAD;AAAOC,EAAAA;AAAP,CAAjB,CAAP,CAA6CC,UAA7C,CAAf","sourcesContent":["import React,{Component} from 'react';\r\nimport{\r\n    Button,\r\n    Modal,\r\n    ModalHeader,\r\n    Form,\r\n    FormGroup,\r\n    Label,\r\n    Input,\r\n    NavLink,\r\n    ModalBody,\r\n    Alert\r\n} from 'reactstrap';\r\n import {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n import {login} from  '../../actions/authAction';\r\n import {clearErrors} from '../../actions/errorAction';\r\n\r\n\r\n class LoginModal extends Component{\r\nstate={\r\n    modal:false,\r\n    name:'',\r\n    mdp:'',\r\n    msg: null\r\n    \r\n};\r\nstatic propTypes={\r\n    isAuthenticated:this.PropTypes.Bool,\r\n    error : PropTypes.object.isRequired,\r\n    login:PropTypes.func.isRequired,\r\n    clearErrors:PropTypes.func.isRequired\r\n    \r\n};\r\n\r\n\r\n\r\ncomponentDidUpdate(prevProps){\r\n    const {error,isAuthenticated}=this.props;\r\n    if(error!==prevProps.error){\r\n        if(error.id==='LOGIN_FAIL'){\r\n            this.setState({msg:error.msg.msg});\r\n        } else{\r\n            this.setState({msg:null});\r\n        }\r\n    }\r\n    \r\n\r\n    if (this.state.modal){\r\n        if(isAuthenticated){\r\n            this.toggle();\r\n        }\r\n    }\r\n\r\n}\r\n\r\ntoggle=()=>{\r\n    this.props.clearErrors();\r\n    this.setState({\r\n        modal:!this.state.modal\r\n    });\r\n};\r\n\r\n\r\n\r\nonChange=(e)=>{\r\n    this.setState({[e.target.name]:e.target.value});\r\n};\r\n\r\n\r\nonSubmit = e =>{\r\n    e.preventDefault();\r\n    \r\n    const{name,mdp}= this.state;\r\n    const user ={\r\n        name,\r\n        mdp\r\n    }\r\n\r\n    this.props.login(user);\r\n\r\n};\r\n\r\n\r\n\r\nrender(){\r\n    return(\r\n        <div>\r\n            <NavLink onClick={this.toggle} href='#'>\r\n                Login\r\n            </NavLink>\r\n\r\n<Modal isOpen={this.state.modal} toggle={this.toggle}>\r\n\r\n        <ModalHeader toggle={this.toggle} >\r\n            login\r\n        </ModalHeader>\r\n        <ModalBody>\r\n            {this.state.msg?(\r\n                <Alert color='danger'>{this.state.msg}</Alert>\r\n            ): null}\r\n            <Form onSubmit={this.onSubmit}>\r\n            \r\n            <FormGroup>\r\n                    <Label for=\"user\">User</Label>\r\n                    <Input \r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    id=\"user\"\r\n                    placeholder=\"enter name\"\r\n                    onChange={this.onChange}/>\r\n\r\n                \r\n                \r\n                    <Label for=\"user\">mdp</Label>\r\n                    <Input \r\n                    type=\"text\"\r\n                    name=\"mdp\"\r\n                    id=\"user\"\r\n                    placeholder=\"enter password\"\r\n                    onChange={this.onChange}/>\r\n\r\n                \r\n                <Button\r\n                color=\"dark\"\r\n                style={{marginTop:'2rem'}}\r\n                block>Login</Button>\r\n                </FormGroup>\r\n            </Form>\r\n        </ModalBody>\r\n\r\n</Modal>\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n }\r\nconst mapStateToProps = state =>({\r\n   isAuthenticated:state.auth.isAuthenticated,\r\n   error:state.error\r\n   \r\n});\r\n \r\n\r\nexport default connect(mapStateToProps,{login,clearErrors})(LoginModal);"]},"metadata":{},"sourceType":"module"}